// How many distinct terms are in the sequence generated by a^b for 2 ≤ a ≤ 100 and 2 ≤ b ≤ 100?

package main

import (
	"fmt"
	"math/big"
	"time"
)

var p = fmt.Println
var pf = fmt.Printf

// timeTrack is used for basic benchmarking in other functions
func timeTrack(start time.Time, name string) {
	elapsed := time.Since(start)
	fmt.Printf("%s took %s \n", name, elapsed)
}

func functionName() {
	defer timeTrack(time.Now(), "functionName()")

}

func main() {

	sequences := make(map[string]bool)
	for a := 2; a <= 100; a++ {
		for b := 2; b <= 100; b++ {
			bigA := big.NewInt(int64(a))
			bigB := big.NewInt(int64(b))
			bigA.Exp(bigA, bigB, nil)
			sequences[bigA.String()] = true
		}
	}
	p(len(sequences))
}
